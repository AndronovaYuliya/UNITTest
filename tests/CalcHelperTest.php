<?php

use PHPUnit\Framework\TestCase;
use App\Helper\CalcHelper;

class CalcHelperTest extends TestCase
{

    /*
     * public function testMultiplyIsCorrect(): void
    {
        $calc=new CalcHelper();

        $this->assertEquals(10, $calc->multiply(2,5));
        $this->assertEquals(12, $calc->multiply(2,6));
        $this->assertEquals(14, $calc->multiply(2,7));
        $this->assertEquals(16, $calc->multiply(2,8));
    }*/

    /**
     * @var CalcHelper
     */
    public $calc;

    public function setUp()
    {
        $this->calc=new CalcHelper();
    }

    //for database
    /*public static function setUpBeforeClass()
    {
        parent::setUpBeforeClass(); // TODO: Change the autogenerated stub
    }*/


    /**
     * @dataProvider multiProvider
     */
    public function testMultiplyIsCorrect($a,$b,$expected): void
    {

        $result= $this->calc->multiply($a,$b);

        $this->assertEquals($expected, $result);
    }

    public function testDivideIsCorrect():void
    {
        $result=$this->calc->divide(20,5);

        $this->assertEquals(4, $result);
    }

    public function testDivideByZero():void
    {
        $this->expectException(InvalidArgumentException::class);

        $this->calc->divide(2,0);
    }

    public function multiProvider():array
    {
        return [
            [1,2,2],
            [5,3,15],
            [2,4,8]
        ];
    }
}